{"version":3,"sources":["TodoItem.js","TodoList.js","NewTodo.js","TodosFilter.js","App.js","index.js"],"names":["TodoItem","handleTodoStatus","_this","props","changeTodoStatus","todo","id","handleClick","todoId","deleteTodo","_this2","this","title","completed","react_default","a","createElement","key","className","type","checked","onChange","htmlFor","onClick","React","Component","TodoList","_ref","todos","map","src_TodoItem","NewTodo","state","inputValue","handleChange","e","setState","target","value","handleSubmit","preventDefault","addNewTodo","onSubmit","placeholder","TodosFilters","tabs","activeTabIndex","i","tab","filterTodos","index","href","FILTER_TYPES","all","active","App","selectedFilter","newTodo","trim","concat","Object","toConsumableArray","Date","objectSpread2","changeAllStatuses","status","filter","selectVisibleTodos","clearAllCompletedTodos","src_NewTodo","length","every","src_TodoList","TodosFilter","some","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a47045a5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoItem extends React.Component {\n  handleTodoStatus = () => {\n    this.props.changeTodoStatus(this.props.todo.id);\n  };\n\n  handleClick = (todoId) => {\n    this.props.deleteTodo(todoId);\n  }\n\n  render() {\n    const { todo } = this.props;\n    const { id, title, completed } = todo;\n\n    return (\n      <li key={id} className={completed ? 'completed' : ''}>\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={completed}\n            onChange={this.handleTodoStatus}\n          />\n          <label htmlFor=\"label\">{title}</label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => this.handleClick(id)}\n          />\n        </div>\n      </li>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    completed: PropTypes.bool,\n    title: PropTypes.string,\n  }).isRequired,\n  changeTodoStatus: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todos, changeTodoStatus, deleteTodo }) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <TodoItem\n        todo={todo}\n        key={todo.id}\n        changeTodoStatus={changeTodoStatus}\n        deleteTodo={deleteTodo}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  changeTodoStatus: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass NewTodo extends React.Component {\n  state = {\n    inputValue: '',\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      inputValue: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.addNewTodo(this.state.inputValue);\n\n    this.setState({\n      inputValue: '',\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          value={this.state.inputValue}\n          onChange={this.handleChange}\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n        />\n      </form>\n    );\n  }\n}\n\nNewTodo.propTypes = {\n  addNewTodo: PropTypes.func.isRequired,\n};\n\nexport default NewTodo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodosFilters extends React.Component {\n  tabs = ['All', 'Active', 'Completed'];\n\n  state = { activeTabIndex: 0 };\n\n  handleClick = (i, tab) => {\n    this.props.filterTodos(tab);\n    this.setState({ activeTabIndex: i });\n  };\n\n  render() {\n    return (\n      <ul className=\"filters\">\n        {this.tabs.map((tab, index) => (\n          <li key={tab}>\n            <a\n              href=\"#/\"\n              onClick={() => this.handleClick(index, tab)}\n              className={this.state.activeTabIndex === index ? 'selected' : ''}\n            >\n              {tab}\n            </a>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nTodosFilters.propTypes = {\n  filterTodos: PropTypes.func.isRequired,\n};\n\nexport default TodosFilters;\n","import React from 'react';\nimport TodoList from './TodoList';\nimport NewTodo from './NewTodo';\nimport TodosFilters from './TodosFilter';\n\nconst FILTER_TYPES = {\n  all: 'All',\n  completed: 'Completed',\n  active: 'Active',\n};\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedFilter: 'All',\n  }\n\n  addNewTodo = (newTodo) => {\n    if (newTodo.trim() === '') {\n      return;\n    }\n\n    this.setState(state => ({\n      todos: [...state.todos,\n        {\n          id: +new Date(),\n          title: newTodo,\n          completed: false,\n        },\n      ],\n    }));\n  };\n\n  changeTodoStatus = (todoId) => {\n    this.setState(state => ({\n      todos: state.todos.map((todo) => {\n        if (todo.id !== todoId) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }),\n    }));\n  };\n\n  changeAllStatuses = (e) => {\n    const status = e.target.checked;\n\n    this.setState(state => ({\n      todos: state.todos.map(todo => ({\n        ...todo,\n        completed: status,\n      })),\n    }));\n  };\n\n  filterTodos = (selectedFilter) => {\n    this.setState({\n      selectedFilter,\n    });\n  }\n\n  deleteTodo = (todoId) => {\n    this.setState(state => ({\n      todos: state.todos.filter(todo => todo.id !== todoId),\n    }));\n  };\n\nselectVisibleTodos = () => this.state.todos.filter((todo) => {\n  switch (this.state.selectedFilter) {\n    case FILTER_TYPES.active:\n      return !todo.completed;\n    case FILTER_TYPES.completed:\n      return todo.completed;\n    default:\n      return true;\n  }\n})\n\n  clearAllCompletedTodos = () => {\n    this.setState(state => ({\n      todos: state.todos.filter(todo => !todo.completed),\n    }));\n  };\n\n  render() {\n    const { todos } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <NewTodo addNewTodo={this.addNewTodo} />\n        </header>\n\n        {todos.length > 0 && (\n          <section className=\"main\">\n            <input\n              type=\"checkbox\"\n              id=\"toggle-all\"\n              className=\"toggle-all\"\n              checked={todos.every(todo => todo.completed)}\n              onChange={this.changeAllStatuses}\n            />\n            <label htmlFor=\"toggle-all\">\n            Mark all as complete\n            </label>\n            <TodoList\n              todos={this.selectVisibleTodos()}\n              changeTodoStatus={this.changeTodoStatus}\n              deleteTodo={this.deleteTodo}\n            />\n          </section>\n        )}\n        {todos.length > 0 && (\n          <footer className=\"footer\">\n            <span className=\"todo-count\">\n              {todos.filter(todo => !todo.completed).length}\n              &nbsp;\n               items left\n            </span>\n\n            <TodosFilters filterTodos={this.filterTodos} />\n\n            {todos.some(todo => todo.completed) && (\n              <button\n                type=\"button\"\n                className=\"clear-completed\"\n                onClick={this.clearAllCompletedTodos}\n              >\n            Clear completed\n              </button>\n            )}\n          </footer>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}